<?xml version="1.0" encoding="UTF-8"?>
<dialect name="DremioDialect" base="PostgreSQL90Dialect" class="dremio" version="18.1">
   <function-map>
      <function group="numeric" name="ABS" return-type="real">
         <!--
            formula
            SQL expression formula. Input parameters are denoted with %1, %2, etc.
        -->
         <formula>ABS(%1)</formula>
         <!--
            argument
            One or more arguments. Data type can include bool, date, datetime,
            localint, localreal, localstr, int, real, spatial, or str.
            Local types must be literals.
        -->
         <argument type="real" />
      </function>
      <function group="numeric" name="ABS" return-type="int">
         <formula>ABS(%1)</formula>
         <argument type="int" />
      </function>
      <function group="numeric" name="ACOS" return-type="real">
         <formula>ACOS(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="ASIN" return-type="real">
         <formula>ASIN(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="ATAN" return-type="real">
         <formula>ATAN(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="ATAN2" return-type="real">
         <formula>ATAN2(%1,%2)</formula>
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="numeric" name="CEILING" return-type="real">
         <formula>CEIL(%1)</formula>
         <argument type="real" />
      </function>
      <function group='numeric' name='CEILING' return-type='int'>
        <formula>CAST(CEIL(%1) AS BIGINT)</formula>
        <argument type='real' />
      </function>
      <function group="numeric" name="COS" return-type="real">
         <formula>COS(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="COT" return-type="real">
         <formula>CASE WHEN %1 = 0 THEN NULL ELSE COT(%1) END</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="DEGREES" return-type="real">
         <formula>DEGREES(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="DIV" return-type="int">
         <formula>(CASE WHEN %2 = 0 THEN NULL ELSE DIV(%1,%2) END)</formula>
         <argument type="int" />
         <argument type="int" />
      </function>
      <function group="numeric" name="EXP" return-type="real">
         <formula>EXP(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="FLOOR" return-type="real">
         <formula>FLOOR(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="FLOOR" return-type="int">
         <formula>CAST(FLOOR(%1) AS BIGINT)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="FLOOR" return-type="int">
        <formula>CAST(FLOOR(%1) AS BIGINT)</formula>
         <argument type="int" />
      </function>
      <function group="numeric" name="LN" return-type="real">
         <formula>(CASE WHEN %1 &gt; 0 THEN LN(%1) ELSE NULL END)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="LOG" return-type="real">
         <formula>CASE WHEN %1 &gt; 0 THEN LOG(10,%1) ELSE NULL END</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="LOG" return-type="real">
         <formula>CASE WHEN %1 &gt; 0 AND %2 &gt; 0 AND %2 &lt;&gt; 1 THEN LOG(%2,%1) ELSE NULL END</formula>
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="numeric" name="MAX" return-type="str">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL WHEN %1 &gt; %2 THEN %1 ELSE %2 END</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="numeric" name="MAX" return-type="real">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL WHEN %1 &gt; %2 THEN %1 ELSE %2 END</formula>
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="numeric" name="MAX" return-type="int">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL WHEN %1 &gt; %2 THEN %1 ELSE %2 END</formula>
         <argument type="int" />
         <argument type="int" />
      </function>
      <function group="numeric" name="MIN" return-type="str">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL WHEN %1 &lt; %2 THEN %1 ELSE %2 END</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="numeric" name="MIN" return-type="real">
        <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL WHEN %1 &lt; %2 THEN %1 ELSE %2 END</formula>
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="numeric" name="MIN" return-type="int">
        <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL WHEN %1 &lt; %2 THEN %1 ELSE %2 END</formula>
         <argument type="int" />
         <argument type="int" />
      </function>
      <function group="numeric" name="PI" return-type="real">
         <formula>CAST(4.0 * ATAN(1) as DECIMAL(38, 7))</formula>
      </function>
      <function group="numeric" name="POWER" return-type="real">
         <formula>POWER(%1,%2)</formula>
         <argument type="int" />
         <argument type="int" />
      </function>
      <function group="numeric" name="POWER" return-type="real">
        <formula>POWER(%1,%2)</formula>
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="numeric" name="RADIANS" return-type="real">
         <formula>RADIANS(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="ROUND" return-type="real">
         <formula>ROUND(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="ROUND" return-type="real">
         <formula>ROUND(%1,%2)</formula>
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="numeric" name="SIGN" return-type="int">
         <formula>SIGN(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="SIN" return-type="real">
         <formula>SIN(%1)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="SQRT" return-type="real">
         <formula>CASE WHEN %1 &gt;= 0 THEN SQRT(%1) ELSE NULL END</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="SQUARE" return-type="real">
         <formula>POWER(%1, 2)</formula>
         <argument type="real" />
      </function>
      <function group="numeric" name="SQUARE" return-type="int">
         <formula>POWER(%1, 2)</formula>
         <argument type="int" />
      </function>
      <function group="numeric" name="TAN" return-type="real">
         <formula>TAN(%1)</formula>
         <argument type="real" />
      </function>
      <function group='numeric' name='TRUNC' return-type='real'>
        <formula>CAST(CAST(FLOOR(%1) AS INTEGER) AS DOUBLE)</formula>
        <argument type='real' />
      </function>
      <function group="numeric;logical" name="ZN" return-type="real">
         <formula>COALESCE(%1, 0)</formula>
         <argument type="real" />
      </function>
      <function group="numeric;logical" name="ZN" return-type="int">
         <formula>COALESCE(%1, 0)</formula>
         <argument type="int" />
      </function>
      <function group="string" name="ASCII" return-type="int">
         <formula>ASCII(%1)</formula>
         <argument type="str" />
      </function>
      <function group="string" name="CHAR" return-type="str">
         <formula>(CASE WHEN ((%1 &gt;= 0) AND (%1 &lt; 256)) THEN CHR(%1) ELSE NULL END)</formula>
         <argument type="real" />
      </function>
      <function group="string" name="CONTAINS" return-type="bool">
         <formula>CASE WHEN %1 IS NULL THEN FALSE ELSE CASE WHEN CHAR_LENGTH(%2) = 0 THEN 1 ELSE POSITION(%2 in %1) END &gt; 0 END</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="string" name="ENDSWITH" return-type="bool">
         <formula>(SUBSTR(RTRIM(%1), CASE WHEN 1 &gt; (LENGTH(RTRIM(%1)) - LENGTH(%2) + 1) THEN 1 ELSE (LENGTH(RTRIM(%1)) - LENGTH(%2) + 1) END, LENGTH(%2)) = %2)</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="string" name="FIND" return-type="int">
         <formula>STRPOS(%1,%2)</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="string" name="FIND" return-type="int">
         <formula>CASE WHEN %3 &lt; 0 OR STRPOS(SUBSTR(%1,CAST(TRUNCATE(%3) AS INTEGER)),%2) = 0 THEN 0 ELSE STRPOS(SUBSTR(%1,CAST(TRUNCATE(%3) AS INTEGER)),%2) + CAST(TRUNCATE(%3) AS INTEGER) END</formula>
         <argument type="str" />
         <argument type="str" />
         <argument type="real" />
      </function>
      <function group="string" name="LEFT" return-type="str">
         <formula>CASE WHEN %2 &lt; 0 THEN NULL ELSE LEFT(%1, CAST(TRUNCATE(%2) AS INTEGER)) END</formula>
         <argument type="str" />
         <argument type="real" />
      </function>
      <function group="string" name="LEN" return-type="int">
         <formula>LENGTH(%1)</formula>
         <argument type="str" />
      </function>
      <function group="string" name="LOWER" return-type="str">
         <formula>LOWER(%1)</formula>
         <argument type="str" />
      </function>
      <function group="string" name="LTRIM" return-type="str">
         <formula>LTRIM(%1)</formula>
         <argument type="str" />
      </function>
      <function group="string" name="MAX" return-type="str">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL ELSE CASE WHEN %1 &gt; %2 THEN %1 ELSE %2 END END</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="string" name="MID" return-type="str">
         <formula>SUBSTR(%1,CAST(TRUNCATE(%2) AS INTEGER))</formula>
         <argument type="str" />
         <argument type="real" />
      </function>
      <function group="string" name="MID" return-type="str">
         <formula>SUBSTR(%1,CAST(TRUNCATE(%2) AS INTEGER), CAST(TRUNCATE(%3) AS INTEGER))</formula>
         <argument type="str" />
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="string" name="MIN" return-type="str">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL WHEN %1 &lt; %2 THEN %1 ELSE %2 END</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="string" name="REGEXP_MATCH" return-type="bool">
         <formula>REGEXP_LIKE(%1, %2)</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="string" name="REGEXP_REPLACE" return-type="str">
         <formula>REGEXP_REPLACE(%1, %2, %3)</formula>
         <argument type="str" />
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="string" name="REPLACE" return-type="str">
         <formula>REPLACE(%1,%2,%3)</formula>
         <argument type="str" />
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="string" name="RIGHT" return-type="str">
         <formula>CASE WHEN %2 &lt; 0 THEN NULL ELSE RIGHT(%1,CAST(TRUNCATE(%2) AS INTEGER)) END</formula>
         <argument type="str" />
         <argument type="real" />
      </function>
      <function group="string" name="RTRIM" return-type="str">
         <formula>RTRIM(%1)</formula>
         <argument type="str" />
      </function>
      <function group="string" name="SPACE" return-type="str">
         <formula>CASE WHEN %1 &lt; 0 THEN NULL ELSE SPACE(%1) END</formula>
         <argument type="real" />
      </function>
      <function group="string" name="SPLIT" return-type="str">
         <formula>CASE WHEN %3 &lt; 0 THEN SPLIT_PART(%1,'%2',((CHAR_LENGTH(%1) - CHAR_LENGTH(REPLACE(%1, '%2', ''))) / CHAR_LENGTH('%2')) + 2 + %3) ELSE SPLIT_PART(%1,'%2',%3) END</formula>
         <argument type="str" />
         <argument type="localstr" />
         <argument type="localint" />
      </function>
      <function group="string" name="STARTSWITH" return-type="bool">
         <formula>(SUBSTR(%1, 1, LENGTH(%2)) = %2)</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="string" name="TRIM" return-type="str">
         <formula>TRIM(%1)</formula>
         <argument type="str" />
      </function>
      <function group="string" name="UPPER" return-type="str">
         <formula>UPPER(%1)</formula>
         <argument type="str" />
      </function>
      <function group="date" name="DAY" return-type="int">
         <formula>EXTRACT(DAY FROM %1)</formula>
         <argument type="datetime" />
      </function>
      <function group="date" name="MAX" return-type="datetime">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL ELSE CASE WHEN %1 &gt; %2 THEN %1 ELSE %2 END END</formula>
         <argument type="datetime" />
         <argument type="datetime" />
      </function>
      <function group="date" name="MAX" return-type="date">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL ELSE CASE WHEN %1 &gt; %2 THEN %1 ELSE %2 END END</formula>
         <argument type="date" />
         <argument type="date" />
      </function>
      <function group="date" name="MIN" return-type="datetime">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL WHEN %1 &lt; %2 THEN %1 ELSE %2 END</formula>
         <argument type="datetime" />
         <argument type="datetime" />
      </function>
      <function group="date" name="MIN" return-type="date">
         <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL WHEN %1 &lt; %2 THEN %1 ELSE %2 END</formula>
         <argument type="date" />
         <argument type="date" />
      </function>
      <function group="date" name="MONTH" return-type="int">
         <formula>EXTRACT(MONTH FROM %1)</formula>
         <argument type="datetime" />
      </function>
      <function group="date" name="NOW" return-type="datetime">
         <formula>NOW()</formula>
      </function>
      <function group="date" name="TODAY" return-type="date">
         <formula>CURRENT_DATE()</formula>
      </function>
      <function group="date" name="YEAR" return-type="int">
         <formula>EXTRACT(YEAR FROM %1)</formula>
         <argument type="datetime" />
      </function>
      <function group="cast" name="DATE" return-type="date">
         <formula>TO_DATE(%1)</formula>
         <argument type="real" />
      </function>
      <function group="cast" name="DATE" return-type="date">
         <formula>CAST(%1 AS DATE)</formula>
         <argument type="str" />
      </function>
      <function group="cast" name="DATE" return-type="date">
         <formula>CAST(%1 AS DATE)</formula>
         <argument type="datetime" />
      </function>
      <function group="cast" name="DATETIME" return-type="datetime">
         <formula>CAST(%1 AS TIMESTAMP)</formula>
         <argument type="str" />
      </function>
      <function group="cast" name="DATETIME" return-type="datetime">
         <formula>CAST(%1 AS TIMESTAMP)</formula>
         <argument type="datetime" />
      </function>
      <function group="cast" name="DATETIME" return-type="datetime">
         <formula>TO_TIMESTAMP(%1)</formula>
         <argument type="real" />
      </function>
      <function group="cast" name="FLOAT" return-type="real">
         <formula>CAST(%1 AS FLOAT)</formula>
         <argument type="real" />
      </function>
      <function group="cast" name="FLOAT" return-type="real">
         <formula>(CASE
  WHEN %1 THEN 1.0
  WHEN NOT %1 THEN 0.0
  ELSE NULL END)</formula>
         <argument type="bool" />
      </function>
      <function group="cast" name="FLOAT" return-type="real">
         <formula>CAST(%1 AS FLOAT)</formula>
         <argument type="str" />
      </function>
      <function group="cast" name="FLOAT" return-type="real">
         <formula>(EXTRACT(DAY FROM %1 - {ts '1900-01-01 00:00:00'}) + ((DATE_PART('SECOND', %1) + DATE_PART('MINUTE', %1) * 60 + DATE_PART('HOUR', %1) * 3600) / 86400.0))</formula>
         <argument type="datetime" />
      </function>
      <function group="cast" name="FLOAT" return-type="real">
         <formula>CAST(CAST(%1 - {d '1900-01-01'} AS BIGINT) AS FLOAT)</formula>
         <argument type="date" />
      </function>
      <function group="cast" name="INT" return-type="int">
         <formula>(UNIX_TIMESTAMP(TO_CHAR(%1, 'YYYY-MM-DD hh:mm:ss')) / 86400)</formula>
         <argument type="datetime" />
      </function>
      <function group="cast" name="INT" return-type="int">
         <formula>CAST(%1 - {d '1900-01-01'} AS BIGINT)</formula>
         <argument type="date" />
      </function>
      <function group="cast" name="INT" return-type="int">
         <formula>CAST(TRUNCATE(%1) AS INTEGER)</formula>
         <argument type="real" />
      </function>
      <function group="cast" name="INT" return-type="int">
         <formula>(%1)</formula>
         <argument type="int" />
      </function>
      <function group="cast" name="INT" return-type="int">
         <formula>(CASE
  WHEN %1 THEN 1
  WHEN NOT %1 THEN 0
  ELSE NULL END)</formula>
         <argument type="bool" />
      </function>
      <function group="cast" name="INT" return-type="int">
         <formula>CAST(%1 AS INTEGER)</formula>
         <argument type="str" />
      </function>
      <function group="cast" name="STR" return-type="str">
         <formula>(CASE
  WHEN %1 THEN '1'
  WHEN NOT %1 THEN '0'
  ELSE NULL END)</formula>
         <argument type="bool" />
      </function>
      <function group="cast" name="STR" return-type="str">
         <formula>(%1)</formula>
         <argument type="str" />
      </function>
      <function group="cast" name="STR" return-type="str">
         <formula>CAST(%1 AS VARCHAR)</formula>
         <argument type="datetime" />
      </function>
      <function group="cast" name="STR" return-type="str">
         <formula>CAST(%1 AS VARCHAR)</formula>
         <argument type="real" />
      </function>
      <function group="cast" name="TO_NLS_CHAR" return-type="str">
         <formula>CAST(%1 AS VARCHAR)</formula>
         <argument type="str" />
      </function>
      <function group="logical" name="IFNULL" return-type="bool">
         <formula>NULLIF(%1, %2)</formula>
         <argument type="bool" />
         <argument type="bool" />
      </function>
      <function group="logical" name="IFNULL" return-type="real">
         <formula>COALESCE(%1, %2)</formula>
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="logical" name="IFNULL" return-type="int">
         <formula>COALESCE(%1, %2)</formula>
         <argument type="int" />
         <argument type="int" />
      </function>
      <function group="logical" name="IFNULL" return-type="str">
         <formula>COALESCE(%1, %2)</formula>
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="logical" name="IFNULL" return-type="datetime">
         <formula>COALESCE(%1, %2)</formula>
         <argument type="datetime" />
         <argument type="datetime" />
      </function>
      <function group="logical" name="IFNULL" return-type="date">
         <formula>COALESCE(%1, %2)</formula>
         <argument type="date" />
         <argument type="date" />
      </function>
      <function group="logical" name="IIF" return-type="bool">
         <formula>((%1 AND %2) OR ((NOT %1) AND %3))</formula>
         <argument type="bool" />
         <argument type="bool" />
         <argument type="bool" />
      </function>
      <function group="logical" name="IIF" return-type="real">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
         <argument type="bool" />
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="logical" name="IIF" return-type="real">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
         <argument type="bool" />
         <argument type="real" />
         <argument type="real" />
         <argument type="real" />
      </function>
      <function group="logical" name="IIF" return-type="int">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
         <argument type="bool" />
         <argument type="int" />
         <argument type="int" />
      </function>
      <function group="logical" name="IIF" return-type="int">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
         <argument type="bool" />
         <argument type="int" />
         <argument type="int" />
         <argument type="int" />
      </function>
      <function group="logical" name="IIF" return-type="str">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
         <argument type="bool" />
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="logical" name="IIF" return-type="str">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
         <argument type="bool" />
         <argument type="str" />
         <argument type="str" />
         <argument type="str" />
      </function>
      <function group="logical" name="IIF" return-type="datetime">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
         <argument type="bool" />
         <argument type="datetime" />
         <argument type="datetime" />
      </function>
      <function group="logical" name="IIF" return-type="datetime">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
         <argument type="bool" />
         <argument type="datetime" />
         <argument type="datetime" />
         <argument type="datetime" />
      </function>
      <function group="logical" name="IIF" return-type="date">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
         <argument type="bool" />
         <argument type="date" />
         <argument type="date" />
      </function>
      <function group="logical" name="IIF" return-type="date">
         <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
         <argument type="bool" />
         <argument type="date" />
         <argument type="date" />
         <argument type="date" />
      </function>
      <function group="logical" name="ISNULL" return-type="bool">
         <formula>%1 IS NULL</formula>
         <argument type="str" />
      </function>
      <function group="logical" name="ISNULL" return-type="bool">
         <formula>%1 IS NULL</formula>
         <argument type="real" />
      </function>
      <function group="logical" name="ISNULL" return-type="bool">
         <formula>%1 IS NULL</formula>
         <argument type="bool" />
      </function>
      <function group="logical" name="ISNULL" return-type="bool">
         <formula>%1 IS NULL</formula>
         <argument type="datetime" />
      </function>
      <function group="aggregate" name="AVG" return-type="real">
         <formula>AVG(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="real" />
      </function>
      <function group="aggregate" name="COUNT" return-type="int">
         <formula>COUNT(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 0 ELSE NULL END)</formula>
         <unagg-formula>(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 1 ELSE 0 END)</unagg-formula>
         <argument type="bool" />
      </function>
      <function group="aggregate" name="COUNT" return-type="int">
         <formula>COUNT(%1)</formula>
         <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
         <argument type="real" />
      </function>
      <function group="aggregate" name="COUNT" return-type="int">
         <formula>COUNT(%1)</formula>
         <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
         <argument type="str" />
      </function>
      <function group="aggregate" name="COUNT" return-type="int">
         <formula>COUNT(%1)</formula>
         <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
         <argument type="datetime" />
      </function>
      <function group="aggregate" name="COUNTD" return-type="int">
         <formula>COUNT(DISTINCT %1)</formula>
         <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
         <argument type="real" />
      </function>
      <function group="aggregate" name="COUNTD" return-type="int">
         <formula>COUNT(DISTINCT %1)</formula>
         <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
         <argument type="str" />
      </function>
      <function group="aggregate" name="COUNTD" return-type="int">
         <formula>COUNT(DISTINCT %1)</formula>
         <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
         <argument type="datetime" />
      </function>
      <function group="aggregate" name="COUNTD" return-type="int">
         <formula>COUNT(DISTINCT (CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 0 ELSE NULL END))</formula>
         <unagg-formula>(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 1 ELSE 0 END)</unagg-formula>
         <argument type="bool" />
      </function>
      <function group="aggregate" name="MAX" return-type="bool">
         <formula>(MAX(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 0 ELSE NULL END)=1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="bool" />
      </function>
      <function group="aggregate" name="MAX" return-type="real">
         <formula>MAX(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="real" />
      </function>
      <function group="aggregate" name="MAX" return-type="int">
         <formula>MAX(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="int" />
      </function>
      <function group="aggregate" name="MAX" return-type="str">
         <formula>MAX(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="str" />
      </function>
      <function group="aggregate" name="MAX" return-type="datetime">
         <formula>MAX(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="datetime" />
      </function>
      <function group="aggregate" name="MAX" return-type="date">
         <formula>MAX(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="date" />
      </function>
      <function group="aggregate" name="MIN" return-type="bool">
         <formula>(MIN(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 0 ELSE NULL END)=1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="bool" />
      </function>
      <function group="aggregate" name="MIN" return-type="real">
         <formula>MIN(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="real" />
      </function>
      <function group="aggregate" name="MIN" return-type="int">
         <formula>MIN(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="int" />
      </function>
      <function group="aggregate" name="MIN" return-type="str">
         <formula>MIN(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="str" />
      </function>
      <function group="aggregate" name="MIN" return-type="datetime">
         <formula>MIN(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="datetime" />
      </function>
      <function group="aggregate" name="MIN" return-type="date">
         <formula>MIN(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="date" />
      </function>
      <function group="aggregate" name="STDEV" return-type="real">
         <formula>STDDEV(%1)</formula>
         <unagg-formula>NULL</unagg-formula>
         <argument type="real" />
      </function>
      <function group="aggregate" name="STDEVP" return-type="real">
         <formula>STDDEV_POP(%1)</formula>
         <unagg-formula>(CASE WHEN %1 IS NULL THEN NULL ELSE 0.0 END)</unagg-formula>
         <argument type="real" />
      </function>
      <function group="aggregate" name="SUM" return-type="real">
         <formula>SUM(%1)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="real" />
      </function>
      <function group="aggregate" name="SUM" return-type="int">
         <formula>CAST(SUM(%1) AS BIGINT)</formula>
         <unagg-formula>%1</unagg-formula>
         <argument type="int" />
      </function>
      <function group="aggregate" name="VAR" return-type="real">
         <formula>VARIANCE(%1)</formula>
         <unagg-formula>NULL</unagg-formula>
         <argument type="real" />
      </function>
      <function group="aggregate" name="VARP" return-type="real">
         <formula>VAR_POP(%1)</formula>
         <unagg-formula>(CASE WHEN %1 IS NULL THEN NULL ELSE 0.0 END)</unagg-formula>
         <argument type="real" />
      </function>
      <function group='operator' name='!' return-type='bool'>
         <formula>(NOT %1)</formula>
         <argument type='bool' />
       </function>
       <function group='operator' name='!=' return-type='bool'>
         <formula>(%1 &lt;&gt; %2)</formula>
         <argument type='datetime' />
         <argument type='datetime' />
       </function>
       <function group='operator' name='!=' return-type='bool'>
         <formula>(%1 AND NOT %2 OR NOT %1 AND %2)</formula>
         <argument type='bool' />
         <argument type='bool' />
       </function>
       <function group='operator' name='!=' return-type='bool'>
         <formula>(%1 &lt;&gt; %2)</formula>
         <argument type='str' />
         <argument type='str' />
       </function>
       <function group='operator' name='!=' return-type='bool'>
         <formula>(%1 &lt;&gt; %2)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='%' return-type='real'>
         <formula>(CASE WHEN %2 = 0 THEN CAST(NULL AS BINARY_DOUBLE) ELSE MOD(%1,%2) END)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='%' return-type='int'>
         <formula>(CASE WHEN %2 = 0 THEN NULL ELSE MOD(%1,%2) END)</formula>
         <argument type='int' />
         <argument type='int' />
       </function>
       <function group='operator' name='&amp;&amp;' return-type='bool'>
         <formula>(%1 AND %2)</formula>
         <argument type='bool' />
         <argument type='bool' />
       </function>
       <function group='operator' name='*' return-type='real'>
         <formula>(%1 * %2)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='*' return-type='int'>
         <formula>(%1 * %2)</formula>
         <argument type='int' />
         <argument type='int' />
       </function>
       <function group='operator' name='+' return-type='real'>
         <formula>(%1 + %2)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='+' return-type='int'>
         <formula>(%1 + %2)</formula>
         <argument type='int' />
         <argument type='int' />
       </function>
       <function group='operator' name='+' return-type='str'>
         <formula>(CASE WHEN %1 IS NULL OR %2 IS NULL THEN NULL ELSE %1 || %2 END)</formula>
         <argument type='str' />
         <argument type='str' />
       </function>
       <function group='operator' name='+' return-type='datetime'>
         <formula>TIMESTAMPADD(SQL_TSI_SECOND, CAST(%2 * 86400 AS INT), %1)</formula>
         <argument type='datetime' />
         <argument type='real' />
       </function>
       <function group='operator' name='+' return-type='datetime'>
         <formula>DATE_ADD(%1, %2)</formula>
         <argument type='datetime' />
         <argument type='int' />
       </function>
       <function group='operator' name='+' return-type='datetime'>
         <formula>TIMESTAMPADD(SQL_TSI_SECOND, CAST(%2 * 86400 AS INT), %1)</formula>
         <argument type='date' />
         <argument type='real' />
       </function>
       <function group='operator' name='+' return-type='date'>
         <formula>DATE_ADD(%1, %2)</formula>
         <argument type='date' />
         <argument type='int' />
       </function>
       <function group='operator' name='-' return-type='real'>
         <formula>(-%1)</formula>
         <argument type='real' />
       </function>
       <function group='operator' name='-' return-type='real'>
         <formula>(%1 - %2)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='-' return-type='real'>
         <formula>EXTRACT(DAY FROM (%1 - %2))</formula>
         <argument type='datetime' />
         <argument type='datetime' />
       </function>
       <function group='operator' name='-' return-type='real'>
         <formula>EXTRACT(DAY FROM (%1 - %2))</formula>
         <argument type='date' />
         <argument type='date' />
       </function>
       <function group='operator' name='-' return-type='int'>
         <formula>(-%1)</formula>
         <argument type='int' />
       </function>
       <function group='operator' name='-' return-type='int'>
         <formula>(%1 - %2)</formula>
         <argument type='int' />
         <argument type='int' />
       </function>
       <function group='operator' name='-' return-type='datetime'>
         <formula>TIMESTAMPADD(SQL_TSI_SECOND, CAST(-%2 * 86400 AS INT), %1)</formula>
         <argument type='datetime' />
         <argument type='real' />
       </function>
       <function group='operator' name='-' return-type='datetime'>
         <formula>TIMESTAMPADD(SQL_TSI_DAY, CAST(-%2 AS INT), %1)</formula>
         <argument type='datetime' />
         <argument type='int' />
       </function>
       <function group='operator' name='-' return-type='datetime'>
         <formula>TIMESTAMPADD(SQL_TSI_SECOND, CAST(-%2 * 86400 AS INT), %1)</formula>
         <argument type='date' />
         <argument type='real' />
       </function>
       <function group='operator' name='-' return-type='date'>
         <formula>DATE_ADD(%1, -%2)</formula>
         <argument type='date' />
         <argument type='int' />
       </function>
       <function group='operator' name='-' return-type='real'>
         <formula>(TIMESTAMPDIFF(SQL_TSI_SECOND, %2, %1) / 86400.0)</formula>
         <argument type='date' />
         <argument type='datetime' />
       </function>
       <function group='operator' name='-' return-type='real'>
         <formula>(TIMESTAMPDIFF(SQL_TSI_SECOND, %2, %1) / 86400.0)</formula>
         <argument type='datetime' />
         <argument type='date' />
       </function>
       <function group='operator' name='/' return-type='real'>
         <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 / %2 END)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='/' return-type='real'>
         <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 / %2 END)</formula>
         <argument type='real' />
         <argument type='int' />
       </function>
       <function group='operator' name='/' return-type='real'>
         <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 / %2 END)</formula>
         <argument type='int' />
         <argument type='real' />
       </function>
       <function group='operator' name='/' return-type='real'>
         <formula>(CASE WHEN %2 = 0 THEN CAST(NULL AS DOUBLE) ELSE CAST(%1 AS DOUBLE) / %2 END)</formula>
         <argument type='int' />
         <argument type='int' />
       </function>
       <function group='operator' name='&lt;' return-type='bool'>
         <formula>(%1 &lt; %2)</formula>
         <argument type='str' />
         <argument type='str' />
       </function>
       <function group='operator' name='&lt;' return-type='bool'>
         <formula>(%1 &lt; %2)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='&lt;' return-type='bool'>
         <formula>(%1 &lt; %2)</formula>
         <argument type='datetime' />
         <argument type='datetime' />
       </function>
       <function group='operator' name='&lt;=' return-type='bool'>
         <formula>(%1 &lt;= %2)</formula>
         <argument type='datetime' />
         <argument type='datetime' />
       </function>
       <function group='operator' name='&lt;=' return-type='bool'>
         <formula>(%1 &lt;= %2)</formula>
         <argument type='str' />
         <argument type='str' />
       </function>
       <function group='operator' name='&lt;=' return-type='bool'>
         <formula>(%1 &lt;= %2)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='==' return-type='bool'>
         <formula>(%1 = %2)</formula>
         <argument type='datetime' />
         <argument type='datetime' />
       </function>
       <function group='operator' name='==' return-type='bool'>
         <formula>(%1 AND %2 OR NOT %1 AND NOT %2)</formula>
         <argument type='bool' />
         <argument type='bool' />
       </function>
       <function group='operator' name='==' return-type='bool'>
         <formula>(%1 = %2)</formula>
         <argument type='str' />
         <argument type='str' />
       </function>
       <function group='operator' name='==' return-type='bool'>
         <formula>(%1 = %2)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='&gt;' return-type='bool'>
         <formula>(%1 &gt; %2)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='&gt;' return-type='bool'>
         <formula>(%1 &gt; %2)</formula>
         <argument type='str' />
         <argument type='str' />
       </function>
       <function group='operator' name='&gt;' return-type='bool'>
         <formula>(%1 &gt; %2)</formula>
         <argument type='datetime' />
         <argument type='datetime' />
       </function>
       <function group='operator' name='&gt;=' return-type='bool'>
         <formula>(%1 &gt;= %2)</formula>
         <argument type='str' />
         <argument type='str' />
       </function>
       <function group='operator' name='&gt;=' return-type='bool'>
         <formula>(%1 &gt;= %2)</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='&gt;=' return-type='bool'>
         <formula>(%1 &gt;= %2)</formula>
         <argument type='datetime' />
         <argument type='datetime' />
       </function>
       <function group='operator' name='^^' return-type='real'>
         <formula>CASE WHEN %1&gt;= 0 OR (%1 &lt; 0 AND (%2 - CAST(TRUNCATE(%2) AS INTEGER))=0)THEN POWER(%1,%2) ELSE NULL END</formula>
         <argument type='real' />
         <argument type='real' />
       </function>
       <function group='operator' name='||' return-type='bool'>
         <formula>(%1 OR %2)</formula>
         <argument type='bool' />
         <argument type='bool' />
       </function>
       <!--
         date-function
         Doesn't require a group. Can contain multiple formulas
         for different date parts. If a part-specific formula is missing, Tableau
         will use the generic (no part attribute) formula.
       -->
      <function group='date' name='ISDATE' return-type='bool'>
         <formula>ISDATE(%1)</formula>
         <argument type='str' />
      </function>
       <date-function name='DATEPARSE' return-type='datetime'>
         <formula>TO_TIMESTAMP(%2, %1)</formula>
         <argument type='localstr' />
         <argument type='str' />
       </date-function>
       <date-function name='DATEADD' return-type='datetime'>
         <formula>DATE_ADD(%3, %2 * INTERVAL &apos;1&apos; %1)</formula>
         <formula part='year'>TIMESTAMPADD(SQL_TSI_YEAR, %2, %3)</formula>
         <formula part='quarter'>TIMESTAMPADD(SQL_TSI_QUARTER, %2, %3)</formula>
         <formula part='month'>TIMESTAMPADD(SQL_TSI_MONTH, %2, %3)</formula>
         <formula part='day'>TIMESTAMPADD(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='day'>TIMESTAMPADD(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='day'>TIMESTAMPADD(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='week'>TIMESTAMPADD(SQL_TSI_WEEK, %2, %3)</formula>
         <formula part='hour'>TIMESTAMPADD(SQL_TSI_HOUR, %2, %3)</formula>
         <formula part='minute'>TIMESTAMPADD(SQL_TSI_MINUTE, %2, %3)</formula>
         <formula part='second'>TIMESTAMPADD(SQL_TSI_SECOND, %2, %3)</formula>
         <argument type='localstr' />
         <argument type='int' />
         <argument type='datetime' />
       </date-function>
       <date-function name='DATEADD' return-type='datetime'>
         <formula>DATE_ADD(%3, %2 * INTERVAL &apos;1&apos; %1)</formula>
         <formula part='year'>TIMESTAMPADD(SQL_TSI_YEAR, %2, %3)</formula>
         <formula part='quarter'>TIMESTAMPADD(SQL_TSI_QUARTER, %2, %3)</formula>
         <formula part='month'>TIMESTAMPADD(SQL_TSI_MONTH, %2, %3)</formula>
         <formula part='day'>TIMESTAMPADD(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='day'>TIMESTAMPADD(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='day'>TIMESTAMPADD(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='week'>TIMESTAMPADD(SQL_TSI_WEEK, %2, %3)</formula>
         <formula part='hour'>TIMESTAMPADD(SQL_TSI_HOUR, %2, %3)</formula>
         <formula part='minute'>TIMESTAMPADD(SQL_TSI_MINUTE, %2, %3)</formula>
         <formula part='second'>TIMESTAMPADD(SQL_TSI_SECOND, %2, %3)</formula>
         <argument type='localstr' />
         <argument type='int' />
         <argument type='date' />
       </date-function>
       <date-function name='DATEDIFF' return-type='int'>
         <formula>TIMESTAMPDIFF(%1, %2, %3)</formula>
         <formula part='year'>(EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2))</formula>
         <formula part='quarter'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 4 + CEIL(EXTRACT(MONTH FROM %3) / 3.0) - CEIL(EXTRACT(MONTH FROM %2) / 3.0))</formula>
         <formula part='month'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 12 + (EXTRACT(MONTH FROM %3) - EXTRACT(MONTH FROM %2)))</formula>
         <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='weekday'>CAST(CAST(%3 AS DATE) - CAST(%2 AS DATE) AS INTEGER)</formula>
         <formula part='week'>((EXTRACT(DAY FROM %3 - %2) / 7) + CASE WHEN EXTRACT(DOW FROM %3) &lt; EXTRACT(DOW FROM %2) THEN 1 ELSE 0 END - CASE WHEN %3 &lt; %2 THEN 1 ELSE 0 END)</formula>
         <argument type='localstr' />
         <argument type='datetime' />
         <argument type='datetime' />
       </date-function>
       <date-function name='DATEDIFF' return-type='int'>
         <formula>TIMESTAMPDIFF(%1, %2, %3)</formula>
         <formula part='year'>(EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2))</formula>
         <formula part='quarter'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 4 + CEIL(EXTRACT(MONTH FROM %3) / 3.0) - CEIL(EXTRACT(MONTH FROM %2) / 3.0))</formula>
         <formula part='month'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 12 + (EXTRACT(MONTH FROM %3) - EXTRACT(MONTH FROM %2)))</formula>
         <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='weekday'>CAST(CAST(%3 AS DATE) - CAST(%2 AS DATE) AS INTEGER)</formula>
         <formula part='week'>((EXTRACT(DAY FROM %3 - %2) / 7) + CASE WHEN EXTRACT(DOW FROM %3) &lt; EXTRACT(DOW FROM %2) THEN 1 ELSE 0 END - CASE WHEN %3 &lt; %2 THEN 1 ELSE 0 END)</formula>
         <argument type='localstr' />
         <argument type='date' />
         <argument type='datetime' />
       </date-function>
       <date-function name='DATEDIFF' return-type='int'>
         <formula>TIMESTAMPDIFF(%1, %2, %3)</formula>
         <formula part='year'>(EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2))</formula>
         <formula part='quarter'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 4 + CEIL(EXTRACT(MONTH FROM %3) / 3.0) - CEIL(EXTRACT(MONTH FROM %2) / 3.0))</formula>
         <formula part='month'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 12 + (EXTRACT(MONTH FROM %3) - EXTRACT(MONTH FROM %2)))</formula>
         <formula part='dayofyear'>TIMESTAMPDIFF('day', %2, %3)</formula>
         <formula part='weekday'>CAST(CAST(%3 AS DATE) - CAST(%2 AS DATE) AS INTEGER)</formula>
         <formula part='week'>((EXTRACT(DAY FROM %3 - %2) / 7) + CASE WHEN EXTRACT(DOW FROM %3) &lt; EXTRACT(DOW FROM %2) THEN 1 ELSE 0 END - CASE WHEN %3 &lt; %2 THEN 1 ELSE 0 END)</formula>
         <argument type='localstr' />
         <argument type='datetime' />
         <argument type='datetime' />
         <argument type='localstr' />
       </date-function>
       <date-function name='DATEDIFF' return-type='int'>
         <formula>TIMESTAMPDIFF(%1, %2, %3)</formula>
         <formula part='month'>(EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2))</formula>
         <formula part='quarter'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 4 + CEIL(EXTRACT(MONTH FROM %3) / 3.0) - CEIL(EXTRACT(MONTH FROM %2) / 3.0))</formula>
         <formula part='month'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 12 + (EXTRACT(MONTH FROM %3) - EXTRACT(MONTH FROM %2)))</formula>
         <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='weekday'>CAST(CAST(%3 AS DATE) - CAST(%2 AS DATE) AS INTEGER)</formula>
         <formula part='week'>((EXTRACT(DAY FROM %3 - %2) / 7) + CASE WHEN EXTRACT(DOW FROM %3) &lt; EXTRACT(DOW FROM %2) THEN 1 ELSE 0 END - CASE WHEN %3 &lt; %2 THEN 1 ELSE 0 END)</formula>
         <argument type='localstr' />
         <argument type='date' />
         <argument type='date' />
       </date-function>
       <date-function name='DATEDIFF' return-type='int'>
         <formula>TIMESTAMPDIFF(%1, %2, %3)</formula>
         <formula part='month'>(EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2))</formula>
         <formula part='quarter'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 4 + CEIL(EXTRACT(MONTH FROM %3) / 3.0) - CEIL(EXTRACT(MONTH FROM %2) / 3.0))</formula>
         <formula part='month'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 12 + (EXTRACT(MONTH FROM %3) - EXTRACT(MONTH FROM %2)))</formula>
         <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY, %2, %3)</formula>
         <formula part='weekday'>CAST(CAST(%3 AS DATE) - CAST(%2 AS DATE) AS INTEGER)</formula>
         <formula part='week'>((EXTRACT(DAY FROM %3 - %2) / 7) + CASE WHEN EXTRACT(DOW FROM %3) &lt; EXTRACT(DOW FROM %2) THEN 1 ELSE 0 END - CASE WHEN %3 &lt; %2 THEN 1 ELSE 0 END)</formula>
         <argument type='localstr' />
         <argument type='date' />
         <argument type='datetime' />
       </date-function>
       <date-function name='DATEDIFF' return-type='int'>
         <formula>TIMESTAMPDIFF(%1, %2, %3)</formula>
         <formula part='month'>(EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2))</formula>
         <formula part='quarter'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 4 + CEIL(EXTRACT(MONTH FROM %3) / 3.0) - CEIL(EXTRACT(MONTH FROM %2) / 3.0))</formula>
         <formula part='month'>((EXTRACT(YEAR FROM %3) - EXTRACT(YEAR FROM %2)) * 12 + (EXTRACT(MONTH FROM %3) - EXTRACT(MONTH FROM %2)))</formula>
         <formula part='dayofyear'>TIMESTAMPDIFF('day', %2, %3)</formula>
         <formula part='weekday'>CAST(CAST(%3 AS DATE) - CAST(%2 AS DATE) AS INTEGER)</formula>
         <formula part='week'>((EXTRACT(DAY FROM %3 - %2) / 7) + CASE WHEN EXTRACT(DOW FROM %3) &lt; EXTRACT(DOW FROM %2) THEN 1 ELSE 0 END - CASE WHEN %3 &lt; %2 THEN 1 ELSE 0 END)</formula>
         <argument type='localstr' />
         <argument type='date' />
         <argument type='date' />
         <argument type='localstr' />
       </date-function>
       <date-function name='DATENAME' return-type='str'>
         <formula part='year'>LTRIM(CAST(YEAR(%2) AS VARCHAR))</formula>
         <formula part='quarter'>LTRIM(CAST(FLOOR((MONTH(%2) - 1) / 3.0 + 1) AS VARCHAR))</formula>
         <formula part='month'>TO_CHAR(%2, 'MONTH')</formula>
         <formula part='dayofyear'>LTRIM(CAST(DAYOFYEAR(%2) AS VARCHAR))</formula>
         <formula part='day'>LTRIM(CAST(DAYOFMONTH(%2) AS VARCHAR))</formula>
         <formula part='weekday'>TO_CHAR(%2, 'DAY')</formula>
         <formula part='week'>LTRIM(CAST(CASE WHEN EXTRACT(DOW FROM %2) &lt; EXTRACT(DOW FROM DATE_TRUNC('YEAR', %2)) THEN 1 ELSE 0 END + ((EXTRACT(DOY FROM %2) + 6) / 7) AS VARCHAR))</formula>
         <formula part='hour'>LTRIM(CAST(HOUR(%2) AS VARCHAR))</formula>
         <formula part='minute'>LTRIM(CAST(MINUTE(%2) AS VARCHAR))</formula>
         <formula part='second'>LTRIM(CAST(SECOND(%2) AS VARCHAR))</formula>
         <argument type='localstr' />
         <argument type='datetime' />
       </date-function>
       <date-function name='DATENAME' return-type='str'>
         <formula part='year'>LTRIM(CAST(YEAR(%2) AS VARCHAR))</formula>
         <formula part='quarter'>LTRIM(CAST(FLOOR((MONTH(%2) - 1) / 3.0 + 1) AS VARCHAR))</formula>
         <formula part='month'>TO_CHAR(%2, 'MONTH')</formula>
         <formula part='dayofyear'>LTRIM(CAST(DAYOFYEAR(%2) AS VARCHAR))</formula>
         <formula part='day'>LTRIM(CAST(DAYOFMONTH(%2) AS VARCHAR))</formula>
         <formula part='weekday'>TO_CHAR(%2, 'DAY')</formula>
         <formula part='week'>LTRIM(CAST(CASE WHEN EXTRACT(DOW FROM %2) &lt; EXTRACT(DOW FROM DATE_TRUNC('YEAR', %2)) THEN 1 ELSE 0 END + ((EXTRACT(DOY FROM %2) + 6) / 7) - CASE WHEN EXTRACT(DOW FROM %2) &lt; %3 THEN 1 ELSE 0 END AS VARCHAR))</formula>
         <formula part='hour'>LTRIM(CAST(HOUR(%2) AS VARCHAR))</formula>
         <formula part='minute'>LTRIM(CAST(MINUTE(%2) AS VARCHAR))</formula>
         <formula part='second'>LTRIM(CAST(SECOND(%2) AS VARCHAR))</formula>
         <argument type='localstr' />
         <argument type='datetime' />
         <argument type='localstr' />
       </date-function>
       <date-function name='DATENAME' return-type='str'>
         <formula part='year'>LTRIM(CAST(YEAR(%2) AS VARCHAR))</formula>
         <formula part='quarter'>LTRIM(CAST(FLOOR((MONTH(%2) - 1) / 3.0 + 1) AS VARCHAR))</formula>
         <formula part='month'>TO_CHAR(%2, 'MONTH')</formula>
         <formula part='dayofyear'>LTRIM(CAST(DAYOFYEAR(%2) AS VARCHAR))</formula>
         <formula part='day'>LTRIM(CAST(DAYOFMONTH(%2) AS VARCHAR))</formula>
         <formula part='weekday'>TO_CHAR(%2, 'DAY')</formula>
         <formula part='week'>LTRIM(CAST(CASE WHEN EXTRACT(DOW FROM %2) &lt; EXTRACT(DOW FROM DATE_TRUNC('YEAR', %2)) THEN 1 ELSE 0 END + ((EXTRACT(DOY FROM %2) + 6) / 7) AS VARCHAR))</formula>
         <formula part='hour'>LTRIM(CAST(HOUR(CAST(%2 AS TIMESTAMP)) AS VARCHAR))</formula>
         <formula part='minute'>LTRIM(CAST(MINUTE(CAST(%2 AS TIMESTAMP)) AS VARCHAR))</formula>
         <formula part='second'>LTRIM(CAST(SECOND(CAST(%2 AS TIMESTAMP)) AS VARCHAR))</formula>
         <argument type='localstr' />
         <argument type='date' />
       </date-function>
       <date-function name='DATENAME' return-type='str'>
         <formula part='year'>LTRIM(CAST(YEAR(%2) AS VARCHAR))</formula>
         <formula part='quarter'>LTRIM(CAST(FLOOR((MONTH(%2) - 1) / 3.0 + 1) AS VARCHAR))</formula>
         <formula part='month'>TO_CHAR(%2, 'MONTH')</formula>
         <formula part='dayofyear'>LTRIM(CAST(DAYOFYEAR(%2) AS VARCHAR))</formula>
         <formula part='day'>LTRIM(CAST(DAYOFMONTH(%2) AS VARCHAR))</formula>
         <formula part='weekday'>TO_CHAR(%2, 'DAY')</formula>
         <formula part='week'>LTRIM(CAST(CASE WHEN EXTRACT(DOW FROM %2) &lt; EXTRACT(DOW FROM DATE_TRUNC('YEAR', %2)) THEN 1 ELSE 0 END + ((EXTRACT(DOY FROM %2) + 6) / 7) - CASE WHEN EXTRACT(DOW FROM %2) &lt; %3 THEN 1 ELSE 0 END AS VARCHAR))</formula>
         <formula part='hour'>LTRIM(CAST(HOUR(CAST(%2 AS TIMESTAMP)) AS VARCHAR))</formula>
         <formula part='minute'>LTRIM(CAST(MINUTE(CAST(%2 AS TIMESTAMP)) AS VARCHAR))</formula>
         <formula part='second'>LTRIM(CAST(SECOND(CAST(%2 AS TIMESTAMP)) AS VARCHAR))</formula>
         <argument type='localstr' />
         <argument type='date' />
         <argument type='localstr' />
       </date-function>
       <date-function name='DATEPART' return-type='int'>
         <formula>DATE_PART(&apos;%1&apos;, %2)</formula>
         <formula part='week'>(CASE WHEN EXTRACT(DOW FROM %2) &lt; EXTRACT(DOW FROM DATE_TRUNC(&apos;YEAR&apos;, %2)) THEN 1 ELSE 0 END + ((EXTRACT(DOY FROM %2) + 6) / 7))</formula>
         <argument type='localstr' />
         <argument type='datetime' />
       </date-function>
       <date-function name='DATEPART' return-type='int'>
         <formula>DATE_PART(&apos;%1&apos;, %2)</formula>
         <formula part='week'>(CASE WHEN EXTRACT(DOW FROM %2) &lt; EXTRACT(DOW FROM DATE_TRUNC(&apos;YEAR&apos;, %2)) THEN 1 ELSE 0 END + ((EXTRACT(DOY FROM %2) + 6) / 7)) - CASE WHEN EXTRACT(DOW FROM %2) &lt; %3 THEN 1 ELSE 0 END</formula>
         <argument type='localstr' />
         <argument type='datetime' />
         <argument type='localstr' />
       </date-function>
       <date-function name='DATETRUNC' return-type='datetime'>
         <formula>DATE_TRUNC(&apos;%1&apos;, %2)</formula>
         <formula part='quarter'>DATE_TRUNC(&apos;QUARTER&apos;, %2)</formula>
         <formula part='week'>DATE_TRUNC(&apos;DAY&apos;, DATE_ADD(%2, -DATE_PART(&apos;DOW&apos;, %2) + 1))</formula>
         <argument type='localstr' />
         <argument type='datetime' />
       </date-function>
       <date-function name='DATETRUNC' return-type='datetime'>
         <formula>DATE_TRUNC(&apos;%1&apos;, %2)</formula>
         <formula part='quarter'>DATE_TRUNC(&apos;QUARTER&apos;, %2)</formula>
         <formula part='week'>DATE_TRUNC(&apos;DAY&apos;, DATE_ADD(%2, -DATE_PART(&apos;DOW&apos;, %2) + %3 + CASE WHEN DATE_PART(&apos;DOW&apos;, %2) &lt;= %3 THEN -6 ELSE 1 END))</formula>
         <argument type='localstr' />
         <argument type='datetime' />
         <argument type='localstr' />
       </date-function>
       <date-function name='DATETRUNC' return-type='datetime'>
         <formula>DATE_TRUNC(&apos;%1&apos;, %2)</formula>
         <formula part='quarter'>DATE_TRUNC(&apos;QUARTER&apos;, %2)</formula>
         <formula part='week'>DATE_TRUNC(&apos;DAY&apos;, DATE_ADD(%2, -DATE_PART(&apos;DOW&apos;, %2) + 1))</formula>
         <argument type='localstr' />
         <argument type='date' />
       </date-function>
       <date-function name='DATETRUNC' return-type='datetime'>
         <formula>DATE_TRUNC(&apos;%1&apos;, %2)</formula>
         <formula part='quarter'>DATE_TRUNC(&apos;QUARTER&apos;, %2)</formula>
         <formula part='week'>DATE_TRUNC(&apos;DAY&apos;, DATE_ADD(%2, -DATE_PART(&apos;DOW&apos;, %2) + %3 + CASE WHEN DATE_PART(&apos;DOW&apos;, %2) &lt;= %3 THEN -6 ELSE 1 END))</formula>
         <argument type='localstr' />
         <argument type='date' />
         <argument type='localstr' />
       </date-function>
   </function-map>
   <supported-aggregations>
      <aggregation value="AGG_COUNT" />
      <aggregation value="AGG_COUNTD" />
      <aggregation value="AGG_SUM" />
      <aggregation value="AGG_AVG" />
      <aggregation value="AGG_MIN" />
      <aggregation value="AGG_MAX" />
      <aggregation value="AGG_STDEV" />
      <aggregation value="AGG_STDEVP" />
      <aggregation value="AGG_VAR" />
      <aggregation value="AGG_VARP" />
      <aggregation value="AGG_YEAR" />
      <aggregation value="AGG_QTR" />
      <aggregation value="AGG_MONTH" />
      <aggregation value="AGG_DAY" />
      <aggregation value="AGG_WEEK" />
      <aggregation value="AGG_WEEKDAY" />
      <aggregation value="AGG_MONTHYEAR" />
      <aggregation value="AGG_MDY" />
      <aggregation value="AGG_HOUR" />
      <aggregation value="AGG_MINUTE" />
      <aggregation value="AGG_SECOND" />
      <aggregation value="TRUNC_YEAR" />
      <aggregation value="TRUNC_QTR" />
      <aggregation value="TRUNC_MONTH" />
      <aggregation value="TRUNC_DAY" />
      <aggregation value="TRUNC_WEEK" />
      <aggregation value="TRUNC_HOUR" />
      <aggregation value="TRUNC_MINUTE" />
      <aggregation value="TRUNC_SECOND" />
   </supported-aggregations>
   <sql-format>
      <format-null>
         <local-type name='str' value='CAST(NULL AS VARCHAR)' />
         <local-type name='bool' value='CAST(NULL AS BOOLEAN)' />
         <local-type name='int' value='CAST(NULL AS INTEGER)' />
         <local-type name='real' value='CAST(NULL AS DOUBLE)' />
         <local-type name='date' value='CAST(NULL AS DATE)' />
         <local-type name='datetime' value='CAST(NULL AS TIMESTAMP)' />
      </format-null>
   </sql-format>
</dialect>